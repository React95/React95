{"version":3,"file":"video.stories-c141266b.js","sources":["../../components/Video/buttons/Play.tsx","../../components/Video/buttons/Pause.tsx","../../components/Video/buttons/Stop.tsx","../../components/Video/buttons/Fullscreen.tsx","../../components/Video/Video.tsx","../../stories/EXPLORER.mp4"],"sourcesContent":["import * as React from 'react';\n\nconst Play = (props: React.HTMLAttributes<SVGElement>) => (\n  <svg\n    height=\"6\"\n    viewBox=\"0 0 494.942 494.942\"\n    width=\"6\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-label=\"play\"\n    {...props}\n  >\n    <path d=\"M35.353 0l424.236 247.471L35.353 494.942z\" />\n  </svg>\n);\n\nexport default Play;\n","import * as React from 'react';\n\nconst Pause = (props: React.HTMLAttributes<SVGElement>) => (\n  <svg\n    height=\"6\"\n    viewBox=\"0 0 424.236 424.236\"\n    width=\"6\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-label=\"pause\"\n    {...props}\n  >\n    <path d=\"M256.471 2h176.765v424.236H256.471zM2 2h176.765v424.236H2z\" />\n  </svg>\n);\n\nexport default Pause;\n","import * as React from 'react';\n\nconst Stop = (props: React.HTMLAttributes<SVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"6\"\n    height=\"6\"\n    aria-label=\"stop\"\n    {...props}\n  >\n    <path d=\"M0 0h306v306H0z\" />\n  </svg>\n);\n\nexport default Stop;\n","import * as React from 'react';\n\nconst Fullscreen = (props: React.HTMLAttributes<SVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"6\"\n    viewBox=\"0 0 24 24\"\n    height=\"6\"\n    aria-label=\"fullscreen\"\n    {...props}\n  >\n    <path\n      d=\"M24 9h-2v-5h-7v-2h9v7zm-9 13v-2h7v-5h2v7h-9zm-15-7h2v5h7v2h-9v-7zm9-13v2h-7v5h-2v-7h9zm11 4h-16v12h16v-12z\"\n      style={{ width: 1000 }}\n    />\n  </svg>\n);\n\nexport default Fullscreen;\n","import * as React from 'react';\nimport styled, { css } from '@xstyled/styled-components';\nimport { Mplayer113, User4 } from '@react95/icons';\n\nimport Frame, { FrameProps } from '../Frame/Frame';\nimport Button from '../Button';\nimport Range from '../Range';\nimport TitleBar from '../TitleBar';\nimport { Play, Pause, Stop, Fullscreen } from './buttons';\nimport Divider from '../List/ListDivider';\n\nconst VideoTag = styled.video<{ visible: boolean }>`\n  width: 100%;\n  padding: 2;\n\n  display: ${({ visible }) => (visible ? 'block' : 'none')};\n`;\n\ntype SourceProps = Pick<HTMLSourceElement, 'src'>;\n\nconst Source: React.FC<SourceProps> = ({ src }) => (\n  <source src={src} type={`video/${src.substring(src.length - 3)}`} />\n);\n\nconst ControlBtn = styled(Button)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  svg {\n    fill: materialText;\n  }\n\n  &&,\n  &:active,\n  &:focus {\n    width: 20px;\n    height: 20px;\n    padding: 7;\n\n    ${({ disabled }) =>\n      disabled &&\n      css`\n        padding: 4;\n        svg {\n          fill: borderDark;\n          border-bottom: 1px solid;\n          border-bottom-color: borderLightest;\n          border-right: 1px solid;\n          border-right-color: borderLightest;\n        }\n      `}\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2 0;\n`;\n\nconst CountDownContainer = styled(Frame)`\n  display: flex;\n  padding: 6;\n  margin-bottom: 4;\n\n  box-shadow: in;\n  background-color: canvas;\n  height: 50px;\n\n  color: canvasText;\n`;\n\nconst VideoFont = styled.span`\n  font-family: 'React95Video-Numbers';\n  text-transform: uppercase;\n`;\n\nconst ResetFrame = styled(Frame)`\n  background-color: transparent;\n  box-shadow: none;\n`;\n\nconst VideoRange = styled(Range)`\n  &::-webkit-slider-thumb {\n    height: 18px;\n    margin-top: -7px;\n    width: 10px;\n  }\n\n  &[value='0']::-webkit-slider-thumb {\n    margin-left: -2px;\n  }\n`;\n\nconst PlayOrPause = ({ playing }: { playing: boolean }) =>\n  playing ? <Pause /> : <Play />;\n\nconst arrayFy = (str: string | string[]) => ([] as string[]).concat(str);\n\nfunction updateProgressBar(\n  player: HTMLVideoElement,\n  updateProgress: (value: number) => void,\n) {\n  const percentage = Math.floor((100 / player.duration) * player.currentTime);\n\n  updateProgress(percentage);\n}\n\nfunction parseCurrentTime(secs: number): string {\n  if (!secs) {\n    return '00:00';\n  }\n\n  const sec = parseInt(secs.toString(), 10);\n  const hours = Math.floor(sec / 3600);\n  const minutes = Math.floor(sec / 60) % 60;\n  const seconds = sec % 60;\n\n  return [hours, minutes, seconds]\n    .map(v => (v < 10 ? `0${v}` : v))\n    .filter((v, i) => v !== '00' || i > 0)\n    .join(':');\n}\n\nexport type VideoProps = {\n  name?: string;\n  src: string;\n  videoProps?: React.HTMLAttributes<HTMLVideoElement>;\n  style?: React.CSSProperties;\n} & FrameProps;\n\nexport type VideoRefs = {\n  video: React.Ref<HTMLVideoElement>;\n  progress: React.Ref<HTMLInputElement>;\n  wrapper: React.Ref<HTMLDivElement>;\n  playpause: React.Ref<HTMLButtonElement>;\n  stop: React.Ref<HTMLButtonElement>;\n  fullScreen: React.Ref<HTMLButtonElement>;\n};\n\nconst VideoRenderer = (\n  { name, src, videoProps, style, ...props }: VideoProps,\n  ref: React.Ref<VideoRefs>,\n) => {\n  const [playing, setPlaying] = React.useState(false);\n  const [loadeddata, setLoadeddata] = React.useState(false);\n  const [progress, setProgress] = React.useState(0);\n\n  const player = React.useRef<HTMLVideoElement>(null);\n  const progressRef = React.useRef<HTMLInputElement>(null);\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const playPauseRef = React.useRef<HTMLButtonElement>(null);\n  const stopRef = React.useRef<HTMLButtonElement>(null);\n  const fullScreenRef = React.useRef<HTMLButtonElement>(null);\n\n  const paths = arrayFy(src);\n  const [pathname] = paths;\n\n  const normalizedName = name || pathname.replace(/^.*[\\\\/]/, '');\n  const title = `${normalizedName}${!loadeddata ? ' (Opening)' : ''}`;\n\n  React.useImperativeHandle(ref, () => ({\n    get video() {\n      return player;\n    },\n    get progress() {\n      return progressRef;\n    },\n    get wrapper() {\n      return wrapperRef;\n    },\n    get playpause() {\n      return playPauseRef;\n    },\n    get stop() {\n      return stopRef;\n    },\n    get fullScreen() {\n      return fullScreenRef;\n    },\n  }));\n\n  React.useEffect(() => {\n    player.current?.addEventListener(\n      'ended',\n      () => {\n        setPlaying(false);\n        setProgress(0);\n      },\n      false,\n    );\n\n    player.current?.addEventListener(\n      'timeupdate',\n      () => {\n        if (player.current) {\n          updateProgressBar(player.current, setProgress);\n        }\n      },\n      false,\n    );\n\n    player.current?.addEventListener(\n      'loadeddata',\n      () => {\n        setLoadeddata(true);\n      },\n      false,\n    );\n\n    player.current?.addEventListener(\n      'playing',\n      () => {\n        setPlaying(true);\n      },\n      false,\n    );\n  }, [player.current]);\n\n  return (\n    <Frame\n      p={2}\n      {...(props as typeof Frame as object)}\n      style={{\n        width: !loadeddata ? 260 : undefined,\n        ...style,\n      }}\n      ref={wrapperRef}\n    >\n      <TitleBar icon={<Mplayer113 variant=\"16x16_4\" />} title={title} />\n      <VideoTag {...videoProps} visible={loadeddata} ref={player}>\n        {paths.map(s => (\n          <Source key={s} src={s} />\n        ))}\n      </VideoTag>\n      {loadeddata && (\n        <Divider as=\"span\" style={{ display: 'block', marginBottom: 2 }} />\n      )}\n      <ResetFrame maxWidth=\"250\" mx=\"auto\" mb={4}>\n        <CountDownContainer>\n          <ResetFrame display=\"flex\" flexDirection=\"column\" w=\"40%\">\n            <VideoFont\n              style={{\n                marginTop: 'auto',\n              }}\n            >\n              {player.current && parseCurrentTime(player.current.duration)}\n            </VideoFont>\n\n            <VideoFont style={{ height: 12 }}>\n              {!loadeddata && 'Openning'}\n            </VideoFont>\n          </ResetFrame>\n          <ResetFrame display=\"flex\" flexDirection=\"column\" w=\"40%\">\n            <VideoFont\n              style={{\n                marginTop: 'auto',\n                fontSize: 22,\n              }}\n            >\n              {player.current && parseCurrentTime(player.current.currentTime)}\n            </VideoFont>\n\n            <VideoFont style={{ height: 12 }}>time</VideoFont>\n          </ResetFrame>\n        </CountDownContainer>\n        <Controls>\n          <ControlBtn\n            disabled={!loadeddata}\n            onClick={() => {\n              if (!playing) {\n                player.current?.play();\n              } else {\n                player.current?.pause();\n              }\n              setPlaying(!playing);\n            }}\n            ref={playPauseRef}\n          >\n            {loadeddata ? (\n              <PlayOrPause playing={playing} />\n            ) : (\n              <User4 variant=\"32x32_4\" />\n            )}\n          </ControlBtn>\n          <ControlBtn\n            disabled={!loadeddata}\n            onClick={() => {\n              if (player.current) {\n                player.current.pause();\n                player.current.currentTime = 0;\n              }\n\n              setPlaying(false);\n            }}\n            ref={stopRef}\n          >\n            <Stop />\n          </ControlBtn>\n          <ControlBtn\n            disabled={!loadeddata}\n            onClick={() => {\n              player?.current?.requestFullscreen();\n            }}\n            ref={fullScreenRef}\n          >\n            <Fullscreen />\n          </ControlBtn>\n\n          <VideoRange\n            ref={progressRef}\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n            value={progress}\n            style={{\n              width: '70%',\n              marginLeft: 20,\n            }}\n            onClick={e => {\n              const { current: el } = progressRef;\n              const { current: video } = player;\n\n              if (video && el) {\n                const percent = e.nativeEvent.offsetX / el.offsetWidth;\n\n                video.currentTime = percent * video.duration;\n\n                setProgress(Math.floor(percent / 100));\n              }\n            }}\n          />\n        </Controls>\n      </ResetFrame>\n    </Frame>\n  );\n};\n\nconst Video = React.forwardRef<VideoRefs, VideoProps>(VideoRenderer);\n\nexport default Video;\n","export default \"__VITE_ASSET__180eb915__\""],"names":["Play","props","jsx","Play$1","Pause","Pause$1","Stop","Stop$1","Fullscreen","Fullscreen$1","VideoTag","styled","visible","Source","src","ControlBtn","Button","disabled","css","Controls","CountDownContainer","Frame","VideoFont","ResetFrame","VideoRange","Range","PlayOrPause","playing","arrayFy","str","updateProgressBar","player","updateProgress","percentage","parseCurrentTime","secs","sec","hours","minutes","seconds","v","i","VideoRenderer","name","videoProps","style","ref","setPlaying","React.useState","loadeddata","setLoadeddata","progress","setProgress","React.useRef","progressRef","wrapperRef","playPauseRef","stopRef","fullScreenRef","paths","pathname","title","React.useImperativeHandle","React.useEffect","_a","_b","_c","_d","jsxs","TitleBar","Mplayer113","s","Divider","User4","e","el","video","percent","Video","React.forwardRef","Video$1","EXPLORER_VIDEO"],"mappings":"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"}