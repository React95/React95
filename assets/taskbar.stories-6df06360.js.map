{"version":3,"file":"taskbar.stories-6df06360.js","sources":["../../components/TaskBar/Clock.tsx","../../components/TaskBar/WindowButton.tsx","../../components/TaskBar/TaskBar.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from '@xstyled/styled-components';\n\nimport Frame from '../Frame';\nimport Tooltip from '../Tooltip';\n\nconst StyledTooltip = styled(Tooltip)`\n  div:first-child {\n    right: 0;\n  }\n`;\n\nconst Clock = () => {\n  const [timer, setTimer] = useState('');\n\n  useEffect(() => {\n    function checkTime(i: number) {\n      return i < 10 ? `0${i}` : i;\n    }\n\n    const interval = setInterval(() => {\n      const today = new Date();\n      const h = today.getHours();\n      const m = today.getMinutes();\n      setTimer(`${checkTime(h)}:${checkTime(m)}`);\n    });\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Frame\n      boxShadow=\"in\"\n      bg=\"transparent\"\n      px={6}\n      py={2}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <StyledTooltip>{timer}</StyledTooltip>\n    </Frame>\n  );\n};\n\nexport default Clock;\n","import React from 'react';\nimport styled, { css, th } from '@xstyled/styled-components';\nimport { Bat } from '@react95/icons';\n\nimport Frame, { FrameProps } from '../Frame/Frame';\nimport { Windows } from '../Modal/ModalContext';\n\nexport type WindowButtonProps = {\n  small?: boolean;\n  active?: boolean;\n} & Pick<Windows, 'icon'> &\n  React.HTMLAttributes<HTMLButtonElement> &\n  FrameProps;\n\ntype ButtonFrameProps = Omit<WindowButtonProps, 'icon'>;\n\nconst Button = styled(Frame)<ButtonFrameProps>`\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 2 3;\n  margin-right: 2;\n  max-width: 150px;\n  border: none;\n  outline: none;\n\n  ${({ small }) =>\n    !small\n      ? `\n    width: 100%;\n  `\n      : ''}\n\n  ${({ active, small }) =>\n    active && small\n      ? css`\n          outline: ${th('space.1')}px dotted ${th('colors.borderDarkest')};\n          outline-offset: -${th('space.4')}px;\n          padding-top: 4;\n          padding-right: 2;\n          padding-bottom: 0;\n          padding-left: 4;\n        `\n      : ''}\n`;\n\nconst IconWrapper = styled.div`\n  img {\n    margin-right: 4;\n    min-width: 20;\n    width: 20;\n    height: 20;\n  }\n`;\n\nconst WindowButton: React.FC<WindowButtonProps> = ({\n  children = '',\n  small,\n  icon,\n  active,\n  ...props\n}) => (\n  <Button\n    active={active}\n    small={small}\n    {...(active\n      ? {\n          boxShadow: 'in',\n          bg: small ? undefined : 'borderLighter',\n        }\n      : {\n          boxShadow: 'out',\n        })}\n    {...props}\n    as=\"button\"\n  >\n    <IconWrapper>{icon}</IconWrapper>\n    {children}\n  </Button>\n);\n\nWindowButton.defaultProps = {\n  small: false,\n  icon: <Bat variant=\"32x32_4\" />,\n  active: false,\n};\n\nexport default WindowButton;\n","/* eslint-disable react/no-array-index-key */\nimport React, { forwardRef } from 'react';\nimport styled from '@xstyled/styled-components';\n\nimport { ModalContext } from '../Modal';\nimport Frame from '../Frame';\nimport List from '../List';\n\nimport Clock from './Clock';\nimport WindowButton from './WindowButton';\nimport { Logo } from '@react95/icons';\n\nconst Truncate = styled.span`\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  text-align: left;\n`;\n\nexport type TaskBarProps = {\n  list?: React.ReactElement<typeof List>;\n};\n\nconst TaskBar = forwardRef<HTMLDivElement, TaskBarProps>(({ list }, ref) => {\n  const [showList, toggleShowList] = React.useState(false);\n  const [activeStart, toggleActiveStart] = React.useState(false);\n  const { windows, activeWindow, setActiveWindow } =\n    React.useContext(ModalContext);\n\n  return (\n    <Frame\n      position=\"fixed\"\n      bottom={0}\n      left={0}\n      right={0}\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      h={28}\n      w=\"100%\"\n      padding={2}\n      zIndex=\"taskbar\"\n      ref={ref}\n    >\n      {showList && (\n        <Frame\n          position=\"absolute\"\n          bottom=\"28\"\n          onClick={() => {\n            toggleActiveStart(false);\n            toggleShowList(false);\n          }}\n        >\n          {list}\n        </Frame>\n      )}\n      <WindowButton\n        small\n        icon={<Logo variant=\"32x32_4\" alt=\"Windows95 Logo\" />}\n        active={activeStart}\n        onClick={() => {\n          toggleActiveStart(!activeStart);\n          toggleShowList(!showList);\n        }}\n      >\n        Start\n      </WindowButton>\n\n      <Frame boxShadow=\"none\" w=\"100%\" paddingLeft={0} ml={2} display=\"flex\">\n        {Object.entries(windows).map(\n          ([windowId, { icon, title, hasButton }]) =>\n            hasButton && (\n              <WindowButton\n                key={windowId}\n                icon={icon}\n                active={windowId === activeWindow}\n                onClick={() => setActiveWindow(windowId)}\n                small={false}\n              >\n                <Truncate>{title}</Truncate>\n              </WindowButton>\n            ),\n        )}\n      </Frame>\n\n      <Clock />\n    </Frame>\n  );\n});\n\nTaskBar.defaultProps = {\n  list: undefined,\n};\n\nexport default TaskBar;\n"],"names":["StyledTooltip","styled","Tooltip","Clock","timer","setTimer","useState","useEffect","checkTime","i","interval","today","h","m","jsx","Frame","Clock$1","Button","small","active","css","th","IconWrapper","WindowButton","children","icon","props","jsxs","Bat","WindowButton$1","Truncate","TaskBar","forwardRef","list","ref","showList","toggleShowList","React","activeStart","toggleActiveStart","windows","activeWindow","setActiveWindow","ModalContext","Logo","windowId","title","hasButton","TaskBar$1"],"mappings":"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"}