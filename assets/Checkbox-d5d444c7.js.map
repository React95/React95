{"version":3,"file":"Checkbox-d5d444c7.js","sources":["../../components/Checkbox/imgs/check.svg","../../components/Checkbox/imgs/check-disabled.svg","../../components/Checkbox/Checkbox.tsx"],"sourcesContent":["export default \"__VITE_ASSET__317232e2__\"","export default \"__VITE_ASSET__4d44b092__\"","import React, { forwardRef } from 'react';\nimport styled, { css, th } from '@xstyled/styled-components';\n\nimport check from './imgs/check.svg';\nimport checkDisabled from './imgs/check-disabled.svg';\n\nconst Icon = styled.span`\n  width: 12px;\n  height: 12px;\n\n  content: '';\n  display: inline-block;\n\n  position: absolute;\n  left: 0;\n\n  border-left: 1;\n  border-left-color: borderDark;\n  border-top: 1;\n  border-top-color: borderDark;\n\n  box-shadow: inset -1px -1px 0 0 ${th('colors.material')},\n    inset 1px 1px 0 0 ${th('colors.borderDarkest')},\n    0.5px 0.5px 0 0.5px ${th('colors.borderLightest')};\n\n  background-color: inputBackground;\n\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 7px 7px;\n`;\n\nconst Text = styled.span`\n  padding: 1;\n  user-select: none;\n`;\n\nconst Field = styled.input.attrs({\n  type: 'checkbox',\n})`\n  width: 12px;\n  height: 12px;\n\n  margin: 0;\n\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  opacity: 0;\n\n  &:focus ~ ${Text}, &:active ~ ${Text} {\n    border-width: 1;\n    border-style: dotted;\n    padding: 0;\n  }\n\n  &:checked + ${Icon} {\n    background-image: url('${check}');\n  }\n\n  &:checked &:disabled + ${Icon} {\n    background-image: url('${checkDisabled}');\n    background-size: 7px 7px, 1.9px 1.9px;\n  }\n\n  &:disabled + ${Icon} {\n    background-color: inputBackgroundDisabled;\n  }\n`;\n\nField.displayName = 'Field';\n\nexport type LabelProps = {\n  disabled?: boolean;\n};\n\nconst Label = styled.label<LabelProps>`\n  display: inline-block;\n  height: 15px;\n\n  line-height: 1.5;\n\n  position: relative;\n\n  margin: 4 0;\n  padding-left: 20;\n\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      color: borderDark;\n      text-shadow: 0.5px 0.5px ${th('colors.borderLight')};\n    `}\n`;\n\nexport type CheckboxProps = {\n  label?: string;\n  children?: string;\n  checked?: boolean;\n  style?: React.CSSProperties;\n} & LabelProps &\n  React.HTMLAttributes<HTMLInputElement>;\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ children, style, checked, label, disabled = false, ...rest }, ref) => (\n    <Label style={style} disabled={disabled}>\n      <Field checked={checked} disabled={disabled} {...rest} ref={ref} />\n      <Icon />\n      <Text>{children || label}</Text>\n    </Label>\n  ),\n);\n\nexport default Checkbox;\n"],"names":["check","checkDisabled","Icon","styled","th","Text","Field","Label","disabled","css","Checkbox","forwardRef","children","style","checked","label","rest","ref","jsxs","jsx","Checkbox$1"],"mappings":"4GAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,qBAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,8BAAA,YAAA,GAAA,EAAA,KCMfC,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAoBC,EAAA,iBAAA;AAAA,wBAeoCA,EAAA,sBAAA;AAAA,0BACPA,EAAA,uBAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUjDC,EAAAF,EAAA;AAAA;AAAA;AAAA,EAKAG,EAAAH,EAAA,MAAA,MAAA,CAAiC,KAAA,UAEjC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAACE,iBAAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAYiCH;AAAA,6BAMlBF;AAAA;AAAA;AAAA,2BACaE;AAAA,6BAGFD;AAAA;AAAA;AAAA;AAAA,iBACEC;AAAA;AAAA;AAAA,EAS7BI,EAAA,YAAA,QAMA,MAAAC,EAAAJ,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAqB,CAAA,CAAA,SAAAK,KAAAA,GAAAC;AAAA;AAAA,iCAajBL,EAAA,oBAAA;AAAA;AAAA,EAcJM,EAAAC,EAAA,WAAiB,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,QAAAC,EAAA,MAAAC,EAAA,SAAAP,EAAA,GAAA,GAAAQ,CAAA,EAAAC,IAAAC,EAAAX,EAAA,CAAA,MAAAM,EAAA,SAAAL,EAAA,SAAA,CAGXW,EAAAb,EAAA,CAAA,QAAAQ,EAAA,SAAAN,EAAA,GAAAQ,EAAA,IAAAC,EAAA,EAAiEE,EAAAjB,EAAA,EAAA,EAC3DiB,EAAAd,EAAA,CAAA,SAAAO,GAAAG,CAAA,CAAA,CACmB,EAAA,CAG/B,EAEAK,EAAAV"}