{"version":3,"file":"index-1842050f.js","sources":["../../components/TitleBar/TitleBar.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { th } from '@xstyled/styled-components';\n\nimport Button from '../Button';\nimport Frame, { FrameProps } from '../Frame/Frame';\n\nconst OptionsBox = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n`;\n\nconst Option = styled(Button).attrs({\n  as: 'li',\n})`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: 2;\n  padding: 0;\n\n  width: 17px;\n  height: 14px;\n\n  min-width: 0;\n  font-weight: 600;\n  font-size: 10;\n\n  &:active {\n    padding: 1 0 0 1;\n\n    outline: none;\n  }\n\n  &:first-child {\n    margin-right: 0;\n  }\n\n  &:focus {\n    box-shadow: inset 1px 1px 0px 1px ${th('colors.borderLightest')},\n      inset -1px -1px 0px 1px ${th('colors.borderDark')};\n  }\n`;\n\nOption.displayName = 'Option';\n\ninterface TitleBarBackgroundProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'color'>,\n    FrameProps {\n  active?: boolean;\n  icon?: React.ReactElement;\n  title?: string;\n}\n\nconst TitleBarBackground = styled(Frame)<{ active?: boolean }>`\n  height: 18;\n  margin-bottom: 2;\n\n  padding: 2;\n\n  display: flex;\n\n  box-shadow: none;\n\n  img {\n    width: 15;\n    height: 14;\n    margin-right: 4;\n  }\n\n  background: ${({ active, theme }) =>\n    active\n      ? theme.colors.headerBackground\n      : theme.colors.headerNotActiveBackground};\n`;\n\nconst Title = styled.div`\n  flex-grow: 1;\n  line-height: 1.4em;\n  margin: 0;\n  font-size: 1em;\n  text-shadow: 0.5px 0px white, 1.5px 0px white;\n  color: transparent;\n  letter-spacing: 1px;\n  font-size: 1em;\n`;\n\ninterface TitleBarOptions {\n  Option: typeof Option;\n  OptionsBox: typeof OptionsBox;\n}\n\nexport interface ITitleBarProps\n  extends TitleBarBackgroundProps,\n    TitleBarOptions {}\n\nconst TitleBarRenderer: React.ForwardRefRenderFunction<\n  HTMLDivElement,\n  TitleBarBackgroundProps\n> = (\n  { children, title = 'UNKNOWN.EXE', icon, active = true, className },\n  ref: React.Ref<HTMLDivElement>,\n) => (\n  <TitleBarBackground\n    active={active}\n    color={active ? 'headerText' : 'headerNotActiveText'}\n    ref={ref}\n    className=\"default\"\n  >\n    {icon && icon}\n    <Title className={className}>{title}</Title>\n\n    {children}\n  </TitleBarBackground>\n);\n\nconst TitleBar = Object.assign(\n  React.forwardRef<HTMLDivElement, TitleBarBackgroundProps>(TitleBarRenderer),\n  {\n    Option,\n    OptionsBox,\n  },\n) as ITitleBarProps & typeof TitleBarRenderer;\n\nexport default TitleBar;\n"],"names":["OptionsBox","styled","Option","Button","th","TitleBarBackground","Frame","active","theme","Title","TitleBarRenderer","children","title","icon","className","ref","jsxs","jsx","TitleBar","React","TitleBar$1"],"mappings":"sLAMA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQAC,EAAAD,EAAAE,CAAA,EAAA,MAAA,CAAoC,GAAA,IAEpC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAACC,EAAA,uBAAA;AAAA,gCA0BiEA,EAAA,mBAAA;AAAA;AAAA,EAKlEF,EAAA,YAAA,SAUA,MAAAG,EAAAJ,EAAAK,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuC,CAAA,CAAA,OAAAC,EAAA,MAAAC,CAAA,IAAAD,EAAAC,EAAA,OAAA,iBAAAA,EAAA,OAAA;AAAA,EAsBvCC,EAAAR,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoBAS,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,cAAA,KAAAC,EAAA,OAAAN,EAAA,GAAA,UAAAO,CAAA,EAAAC,IAAAC,EAOEX,EAAC,CAAA,OAAAE,EACC,MAAAA,EAAA,aAAA,sBAC+B,IAAAQ,EAC/B,UAAA,UACU,SAAA,CAETF,GAAAA,EAAQI,EAAAR,EAAA,CAAA,UAAAK,EAAA,SAAAF,CAAA,CAAA,EAC2BD,CAEnC,CAAA,CACH,EAGFO,EAAA,OAAA,OAAwBC,EAAA,WAAAT,CAAA,EACoD,CAC1E,OAAAR,EACE,WAAAF,CACA,CAEJ,EAEAoB,EAAAF"}