import{c as a,r as u}from"./index-9fa1aa67.js";var l=typeof a=="object"&&a&&a.Object===Object&&a,f=typeof self=="object"&&self&&self.Object===Object&&self;l||f||Function("return this")();var d=typeof window<"u"?u.useLayoutEffect:u.useEffect;function p(e,r,o,n){const s=u.useRef(r);d(()=>{s.current=r},[r]),u.useEffect(()=>{const t=(o==null?void 0:o.current)??window;if(!(t&&t.addEventListener))return;const i=c=>{s.current(c)};return t.addEventListener(e,i,n),()=>{t.removeEventListener(e,i,n)}},[e,o,n])}function v(){const[e,r]=u.useState(null),o=u.useCallback(async n=>{if(!(navigator!=null&&navigator.clipboard))return console.warn("Clipboard not supported"),!1;try{return await navigator.clipboard.writeText(n),r(n),!0}catch(s){return console.warn("Copy failed",s),r(null),!1}},[]);return[e,o]}function y(e,r,o="mousedown",n={}){p(o,s=>{const t=s.target;if(!t||!t.isConnected)return;(Array.isArray(e)?e.filter(c=>!!c.current).every(c=>c.current&&!c.current.contains(t)):e.current&&!e.current.contains(t))&&r(s)},void 0,n)}export{y as a,v as u};
