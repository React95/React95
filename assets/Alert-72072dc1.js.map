{"version":3,"file":"Alert-72072dc1.js","sources":["../../components/Alert/assets/chord.mp3","../../components/Alert/Alert.tsx"],"sourcesContent":["export default \"__VITE_ASSET__0b4966f8__\"","import { User2, User3, User4, User5 } from '@react95/icons';\nimport styled from '@xstyled/styled-components';\nimport React, { forwardRef, useEffect } from 'react';\n\nimport Modal, { ModalProps } from '../Modal/Modal';\n\nimport sound from './assets/chord.mp3';\n\nexport type AlertType = 'error' | 'info' | 'question' | 'warning';\n\nconst RenderImage: React.FC<{ option: string }> = ({ option }) => {\n  switch (option) {\n    case 'info':\n      return <User5 variant=\"32x32_4\" />;\n    case 'question':\n      return <User3 variant=\"32x32_4\" />;\n    case 'warning':\n      return <User2 variant=\"32x32_4\" />;\n    case 'error':\n    default:\n      return <User4 variant=\"32x32_4\" />;\n  }\n};\n\nconst Message = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst IconWrapper = styled.div`\n  padding: 7 15 7 7;\n`;\n\nconst Dialog = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport type AlertProps = Omit<ModalProps, 'closeModal'> & {\n  message: string;\n  closeAlert: ModalProps['closeModal'];\n  hasSound?: boolean;\n  type?: AlertType;\n};\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(\n  ({ type = 'error', message, closeAlert, hasSound, ...rest }, ref) => {\n    if (hasSound) {\n      useEffect(() => {\n        const audio = new Audio(sound);\n        audio.play();\n      }, []);\n    }\n\n    return (\n      <Modal\n        closeModal={closeAlert}\n        height=\"120\"\n        hasWindowButton={false}\n        {...rest}\n        ref={ref}\n      >\n        <Dialog>\n          <IconWrapper>\n            <RenderImage option={type} />\n          </IconWrapper>\n          <Message>{message}</Message>\n        </Dialog>\n      </Modal>\n    );\n  },\n);\n\nAlert.displayName = 'Alert';\n\nAlert.defaultProps = {\n  type: 'error',\n  buttons: [{ value: 'OK', onClick: () => {} }],\n  closeAlert: () => {},\n  buttonsAlignment: 'center',\n  positionOffset: {\n    x:\n      typeof window == 'undefined'\n        ? 0\n        : Math.floor(window.innerWidth / 2) - 150,\n    y:\n      typeof window == 'undefined'\n        ? 0\n        : Math.floor(window.innerHeight / 2) - 80,\n  },\n  hasSound: false,\n};\n\nexport default Alert;\n"],"names":["sound","RenderImage","option","jsx","User5","User3","User2","User4","Message","styled","IconWrapper","Dialog","Alert","forwardRef","type","message","closeAlert","hasSound","rest","ref","useEffect","Modal","jsxs","Alert$1"],"mappings":"oMAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,qBAAA,YAAA,GAAA,EAAA,KCUfC,EAAA,CAAA,CAAA,OAAAC,KAAA,CACE,OAAAA,EAAA,CAAgB,IAAA,OAEZ,OAAAC,EAAAC,EAAA,CAAA,QAAA,SAAA,CAAA,EAAgC,IAAA,WAEhC,OAAAD,EAAAE,EAAA,CAAA,QAAA,SAAA,CAAA,EAAgC,IAAA,UAEhC,OAAAF,EAAAG,EAAA,CAAA,QAAA,SAAA,CAAA,EAAgC,IAAA,QAC7B,QAEH,OAAAH,EAAAI,EAAA,CAAA,QAAA,SAAA,CAAA,CAAgC,CAEtC,EAEAC,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA,EAMAC,EAAAD,EAAA;AAAA;AAAA,EAIAE,EAAAF,EAAA;AAAA;AAAA;AAAA,EAYAG,EAAAC,EAAA,WAAc,CAAA,CAAA,KAAAC,EAAA,QAAA,QAAAC,EAAA,WAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,KAEVF,GACEG,EAAAA,UAAA,IAAA,CACE,IAAA,MAAApB,CAAA,EACA,KAAA,CAAW,EAAA,CAAA,CAAA,EAIfG,EACEkB,EAAC,CAAA,WAAAL,EACa,OAAA,MACL,gBAAA,GACU,GAAAE,EACb,IAAAC,EACJ,SAAAG,EAAAX,EAAA,CAAA,SAAA,CAGER,EAAAO,EAAA,CAAA,SAAAP,EAAAF,EAAA,CAAA,OAAAa,CAAA,CAAA,EAAA,EAEAX,EAAAK,EAAA,CAAA,SAAAO,CAAA,CAAA,CACkB,EAAA,CACpB,CAAA,EAIR,EAEAH,EAAA,YAAA,QAEAA,EAAA,aAAA,CAAqB,KAAA,QACb,QAAA,CAAA,CAAA,MAAA,KAAA,QAAA,IAAA,CACkC,EAAA,EAAI,WAAA,IAAA,CAC1B,EAAC,iBAAA,SACD,eAAA,CACF,EAAA,OAAA,OAAA,IAAA,EAAA,KAAA,MAAA,OAAA,WAAA,CAAA,EAAA,IAI4B,EAAA,OAAA,OAAA,IAAA,EAAA,KAAA,MAAA,OAAA,YAAA,CAAA,EAAA,EAIC,EAC7C,SAAA,EAEF,EAEA,MAAAW,EAAAX;;;;;;;;;"}